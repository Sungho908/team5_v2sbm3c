<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.mvc.shoes.ShoesDAOInter">
  <insert id="create" parameterType="dev.mvc.shoes.ShoesVO">
    INSERT INTO SHOES (SHOESNO, MEMBERNO, TITLE, BRAND, PRICE, DISCOUNT,
    CONTENTS)
    VALUES (SHOES_SEQ.nextval, #{memberno}, #{title}, #{brand}, #{price},
    #{discount}, #{contents})
  </insert>

  <insert id="option_create" parameterType="dev.mvc.shoes.ShoesOptionVO">
    INSERT INTO OPTIONS (OPTIONNO, SIZES, COLOR, SHOESNO)
    VALUES (OPTION_SEQ.nextval, #{sizes}, #{color}, #{shoesno})
  </insert>

  <select id="list_all" resultType="dev.mvc.shoes.ShoesVO">
    SELECT SHOESNO, MEMBERNO, TITLE, BRAND, RATING, PRICE, DISCOUNT, CONTENTS,
    VISIBLE
    FROM shoes
    ORDER BY rating ASC
  </select>

  <select id="findByCategoryNo" resultType="dev.mvc.shoes.ShoesReviewVO">
    SELECT * FROM category WHERE categoryno = #{categoryno}
  </select>


  <select id="review_list_all" resultType="dev.mvc.shoes.ShoesReviewVO">
    SELECT r.reviewno, r.contents, r.grade, r.shoesno, r.memberno, r.rdate
    FROM review r
    JOIN shoes s ON s.shoesno = r.shoesno
    WHERE r.shoesno = #{shoesno}
  </select>

  <!--없어도됨-->
<<<<<<< HEAD
  <select id="sneakers_list" resultType="dev.mvc.shoes.ShoesReviewVO">
    SELECT s.title, s.brand, s.contents, s.price
    FROM shoes s
    JOIN category_list cl ON s.shoesno = cl.shoesno
    JOIN category c ON cl.categoryno = c.categoryno
    WHERE UPPER(TITLE) LIKE '%' || ('스니커즈') || '%' OR (BRAND) LIKE '%' ||
    ('스니커즈') || '%'
  </select>

  <!--없어도됨-->
  <select id="slipon_list" resultType="dev.mvc.shoes.ShoesReviewVO">
    SELECT s.title, s.brand, s.contents, s.price
    FROM shoes s
    JOIN category_list cl ON s.shoesno = cl.shoesno
    JOIN category c ON cl.categoryno = c.categoryno
    WHERE UPPER(TITLE) LIKE '%' || ('슬립온') || '%' OR (BRAND) LIKE '%' || ('슬립온')
    || '%'
=======
  <select id="sneakers_list" resultType="dev.mvc.shoes.ShoesVO">
  SELECT s.title, s.brand, s.contents
  FROM shoes s
  JOIN category_list cl ON s.shoesno = cl.shoesno
  JOIN category c ON cl.categoryno = c.categoryno
 WHERE UPPER(TITLE) LIKE '%' || ('스니커즈') || '%' OR (BRAND) LIKE '%' || ('스니커즈') || '%'
  </select>

  <!--없어도됨-->
  <select id="slipon_list" resultType="dev.mvc.shoes.ShoesVO">
  SELECT s.title, s.brand, s.contents
  FROM shoes s
  JOIN category_list cl ON s.shoesno = cl.shoesno
  JOIN category c ON cl.categoryno = c.categoryno
 WHERE UPPER(TITLE) LIKE '%' || ('슬립온') || '%' OR (BRAND) LIKE '%' || ('슬립온') || '%'
>>>>>>> 9e71262b6eeddb27194735ee7c6f7e0c9032cbf2
  </select>

  <!--없어도됨-->
  <select id="boots_list" resultType="dev.mvc.shoes.ShoesReviewVO">
    SELECT s.title, s.brand, s.contents, s.price
    FROM shoes s
    JOIN category_list cl ON s.shoesno = cl.shoesno
    JOIN category c ON cl.categoryno = c.categoryno
    WHERE UPPER(TITLE) LIKE '%' || ('부츠') || '%' OR (BRAND) LIKE '%' || ('부츠')
    || '%'
  </select>

  <!--없어도됨-->
  <select id="worker_list" resultType="dev.mvc.shoes.ShoesReviewVO">
    SELECT s.title, s.brand, s.contents, s.price
    FROM shoes s
    JOIN category_list cl ON s.shoesno = cl.shoesno
    JOIN category c ON cl.categoryno = c.categoryno
    WHERE UPPER(TITLE) LIKE '%' || ('워커') || '%' OR (BRAND) LIKE '%' || ('워커')
    || '%'
  </select>
  <select id="select_shoes" resultType="dev.mvc.shoes.ShoesVO">
    SELECT * FROM SHOES WHERE SHOESNO = #{shoesno}
  </select>

  <select id="read" resultType="dev.mvc.shoes.ShoesVO">
    SELECT SHOESNO, MEMBERNO, TITLE, BRAND, RATING, PRICE, DISCOUNT, CONTENTS,
    VISIBLE
    FROM SHOES
    WHERE shoesno=#{shoesno}
  </select>

  <select id="read_option" resultType="dev.mvc.shoes.ShoesOptionVO"
    parameterType="Map">
    SELECT OPTIONNO, SIZES, AMOUNT, COLOR, SHOESNO
    FROM options
    WHERE shoesno =#{shoesno} AND optionno = #{optionno}
  </select>

  <select id="option_paging" resultType="dev.mvc.shoes.ShoesOptionVO"
    parameterType="Map">
    SELECT o.optionno, o.shoesno, o.sizes, o.amount, o.color, r
    FROM (
    SELECT optionno, shoesno, sizes, amount, color, rownum as r
    FROM options
    WHERE shoesno = #{shoesno}
    ) o
    JOIN shoes s ON o.shoesno = s.shoesno
    WHERE r &gt; = #{start_num} AND r &lt; = #{end_num}
  </select>


  <select id="selectwith" resultType="dev.mvc.shoes.ShoesVO">
    SELECT s.*, o.OPTIONNO, o.SIZE, o.AMOUNT, o.COLOR
    FROM SHOES s
    INNER JOIN OPTION o ON s.SHOESNO = o.SHOESNO
    WHERE s.SHOESNO = #{shoesno}
  </select>

  <update id="update" parameterType="dev.mvc.shoes.ShoesVO">
    UPDATE SHOES
    SET TITLE = #{title}, BRAND = #{brand}, RATING = #{rating}, PRICE =#{price},
    DISCOUNT = #{discount}, CONTENTS = #{contents}, VISIBLE = #{visible}
    WHERE SHOESNO = #{shoesno}
  </update>

  <update id="option_update" parameterType="dev.mvc.shoes.ShoesOptionVO">
    UPDATE OPTIONS
    SET SIZES = #{sizes}, AMOUNT = #{amount}, COLOR = #{color}
    WHERE OPTIONNO = #{optionno}
  </update>


  <delete id="delete" parameterType="Integer">
    DELETE FROM SHOES WHERE SHOESNO = #{shoesno}
  </delete>

  <delete id="option_delete" parameterType="Integer">
    DELETE FROM OPTIONS WHERE OPTIONNO = #{optionno}
  </delete>


  <select id="parent_count" parameterType="Integer">
    SELECT count(*) as cnt FROM SHOES WHERE SHOESNO = #{shoesno}
  </select>


  <!-- 검색된 레코드 수 -->
  <select id="list_search_count" resultType="int" parameterType="String"> SELECT
    COUNT(*) as cnt FROM shoes <if test="word != null and word != ''">
      WHERE UPPER(TITLE) LIKE '%' || UPPER(#{word}) || '%' OR UPPER(BRAND) LIKE
    '%' || UPPER(#{word}) || '%'
    </if>
    ORDER BY shoesno ASC </select>

  <select id="option_search_count" resultType="int">
    SELECT COUNT(*) as cnt
    FROM options
    WHERE shoesno = #{shoesno}
    ORDER BY optionno ASC
  </select>

  <select id="review_search_count" resultType="int"> SELECT COUNT(*) as cnt FROM
    review <if test="word != null and word != ''">
      WHERE UPPER(contents) LIKE '%' || UPPER(#{word}) || '%'
    </if>
    ORDER BY grade ASC </select>


  <select id="list_search_paging" resultType="dev.mvc.shoes.ShoesVO"
    parameterType="Map"> SELECT SHOESNO, MEMBERNO, TITLE, BRAND, RATING, PRICE,
    DISCOUNT, CONTENTS, VISIBLE, r FROM ( SELECT SHOESNO, MEMBERNO, TITLE,
    BRAND, RATING, PRICE, DISCOUNT, CONTENTS, VISIBLE, rownum as r FROM ( SELECT
    SHOESNO, MEMBERNO, TITLE, BRAND, RATING, PRICE, DISCOUNT, CONTENTS, VISIBLE
    FROM SHOES <if test="word != null and word != ''">
      WHERE UPPER(TITLE) LIKE '%' || UPPER(#{word}) || '%' OR UPPER(BRAND) LIKE
    '%' || UPPER(#{word}) || '%'
    </if>
    ORDER BY shoesno ASC ) ) WHERE r &gt; = #{start_num} AND r &lt; = #{end_num} <!-- WHERE r >= 1 AND r <= 3 -->
  </select>

<<<<<<< HEAD

  <select id="review_paging" resultType="dev.mvc.shoes.ShoesReviewVO"
    parameterType="Map"> SELECT REVIEWNO, CONTENTS, GRADE, RDATE, SHOESNO,
    MEMBERNO, r FROM ( SELECT REVIEWNO, CONTENTS, GRADE, RDATE, SHOESNO,
    MEMBERNO, rownum as r FROM ( SELECT R.REVIEWNO, R.CONTENTS, R.GRADE,
    R.RDATE, R.SHOESNO, R.MEMBERNO FROM REVIEW R INNER JOIN SHOES S ON R.SHOESNO
    = S.SHOESNO <if test="word != null and word != ''">
      WHERE UPPER(R.CONTENTS) LIKE '%' || UPPER(#{word}) || '%'
    </if>
    ORDER BY R.REVIEWNO ASC ) ) WHERE r &gt;= #{start_num} AND r &lt;=
    #{end_num} </select>


  <select id="shoes_search" resultType="dev.mvc.shoes.ShoesReviewVO"
    parameterType="Map">
    <!-- categoryno(소분류)에 따라 신발 분류 및 검색 결과 쿼리 (제목, 브랜드, 내용, 가격)--> SELECT s.title, s.brand, s.contents, s.price FROM shoes
    s JOIN category_list cl ON s.shoesno = cl.shoesno JOIN category c ON
    cl.categoryno = c.categoryno WHERE cl.categoryno = ${categoryno} <if
      test="word != null and word != ''">
      WHERE
      (
      UPPER(s.title) LIKE '%' || UPPER(#{word}) || '%'
      OR UPPER(s.brand) LIKE '%' || UPPER(#{word}) || '%'
      OR UPPER(s.contents) LIKE '%' || UPPER(#{word}) || '%'
      OR UPPER(s.price) LIKE '%' || UPPER(#{word}) || '%'
      )
    </if>
    ) WHERE r &gt;= #{start_num} AND r &lt;= #{end_num}; </select>

  <select id="shoes_read" resultType="dev.mvc.shoes.ShoesReviewVO">
    <!-- 신발 상세보기 신발(제목, 브랜드, 설명, 가격, 할인율, 총평점) 카테고리(소분류명), 옵션(사이즈, 색상, 사이즈/색상 별
    개수), 후기(내용, 평점, 날짜)--> SELECT
    s.title, s.brand, s.contents, s.price, s.discount, s.rating, c.subname,
    o.sizes, o.color, o.amount, r.contents, r.grade, r.rdate FROM shoes s JOIN
    category_list cl ON s.shoesno = cl.shoesno JOIN category c ON cl.categoryno
    = c.categoryno JOIN options o ON s.shoesno = o.shoesno JOIN review r ON
    s.shoesno = r.shoesno WHERE cl.categoryno = ${categoryno} and s.shoesno =
    ${shoesno}; </select>

  
  <select id="getBasket" resultType="dev.mvc.basket.Basket">
      SELECT b.basketno, b.amount, b.memberno, b.optionno,
    o.sizes, o.amount AS option_amount, o.color,
    s.shoesno, s.title, s.brand, s.rating, s.price, s.discount, s.contents
    FROM basket b
    JOIN options o ON b.optionno = o.optionno
    JOIN shoes s ON o.shoesno = s.shoesno
    WHERE b.memberno = ${memberno}
</select>
=======
  <select id="review_paging" resultType="dev.mvc.shoes.ShoesReviewVO" parameterType="Map">
    SELECT REVIEWNO, CONTENTS, GRADE, RDATE, SHOESNO, MEMBERNO, r
  FROM (
    SELECT REVIEWNO, CONTENTS, GRADE, RDATE, SHOESNO, MEMBERNO, rownum as r
    FROM (
      SELECT R.REVIEWNO, R.CONTENTS, R.GRADE, R.RDATE, R.SHOESNO, R.MEMBERNO
      FROM REVIEW R
      INNER JOIN SHOES S ON R.SHOESNO = S.SHOESNO
    <if test="word != null and word != ''">
        WHERE UPPER(R.CONTENTS) LIKE '%' || UPPER(#{word}) || '%'
      </if>
    ORDER BY R.REVIEWNO ASC
    )
  )
  WHERE r &gt;= #{start_num} AND r &lt;= #{end_num}
  </select>
>>>>>>> 9e71262b6eeddb27194735ee7c6f7e0c9032cbf2
</mapper>

