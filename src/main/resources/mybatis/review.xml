<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.mvc.review.ReviewDAOInter">

  <select id="review_list" resultMap="reviewRead">
    SELECT r.reviewno, r.contents, r.rating, r.rdate, s.title, m.memberno,
    m.nickname,
    COUNT(l.likesno) AS likes, COUNT(h.hatesno) AS hates
    FROM review r
    JOIN shoes s ON r.shoesno = s.shoesno
    JOIN member m ON r.memberno = m.memberno
    LEFT JOIN likes l ON r.reviewno = l.reviewno
    LEFT JOIN hates h ON r.reviewno = h.reviewno
    WHERE r.shoesno = #{shoesno}
    GROUP BY r.reviewno, r.contents, r.rating, r.rdate, s.title, m.memberno,
    m.nickname
  </select>

  <resultMap id="reviewRead" type="dev.mvc.shoes.ShoesAllVO">
    <association property="reviewVO" javaType="dev.mvc.review.ReviewVO">
      <id property="reviewno" column="reviewno" />
      <result property="contents" column="contents" />
      <result property="rating" column="rating" />
      <result property="rdate" column="rdate" />
      <result property="likes" column="likes" />
      <result property="hates" column="hates" />
    </association>

    <association property="shoesVO" javaType="dev.mvc.shoes.ShoesVO">
      <result property="title" column="title" />
    </association>

    <association property="memberVO" javaType="dev.mvc.member.MemberVO">
      <id property="memberno" column="memberno" />
      <result property="nickname" column="nickname" />
    </association>
  </resultMap>

  <select id="review_list_all" resultType="dev.mvc.review.ReviewVO">
    SELECT r.reviewno, r.contents, r.rating, r.rdate, m.nickname
    FROM review r
    JOIN member m ON r.memberno = m.memberno
    WHERE r.shoesno = #{shoesno}
    ORDER BY r.rdate DESC
  </select>

  <insert id="create" parameterType="dev.mvc.review.ReviewVO">
    INSERT INTO review(reviewno, contents, rating, rdate, shoesno, memberno)
    VALUES(review_seq.nextval, #{contents}, #{rating}, sysdate, #{shoesno},
    #{memberno})
  </insert>

  <update id="update" parameterType="dev.mvc.review.ReviewVO">
    UPDATE review
    SET contents = #{contents}, rating = #{rating}
    WHERE reviewno = #{reviewno}
  </update>

  <delete id="delete" parameterType="Integer">
    DELETE FROM review
    WHERE reviewno = #{reviewno}
  </delete>

  <select id="myReviewCount" parameterType="Integer">
    SELECT COUNT(*)
    FROM review r
    JOIN shoes s ON s.shoesno = r.shoesno
    WHERE r.memberno = #{memberno}
    ORDER BY rdate desc
  </select>

  <select id="myReview" resultMap="myReview" parameterType="Integer">
    SELECT r.reviewno, r.contents, r.rating, r.rdate, s.shoesno, s.title
    FROM review r
    JOIN shoes s ON s.shoesno = r.shoesno
    WHERE r.memberno = #{memberno}
    ORDER BY rdate desc
  </select>

  <resultMap id="myReview" type="dev.mvc.shoes.ShoesAllVO">
    <association property="reviewVO" javaType="dev.mvc.review.ReviewVO">
      <id property="reviewno" column="reviewno" />
      <result property="contents" column="contents" />
      <result property="rating" column="rating" />
      <result property="rdate" column="rdate" />
    </association>

    <association property="shoesVO" javaType="dev.mvc.shoes.ShoesVO">
      <id property="shoesno" column="shoesno" />
      <result property="title" column="title" />
    </association>
  </resultMap>


  <!-- 검색된 레코드 수 -->
  <select id="list_search_count" resultType="int" parameterType="Map">
    SELECT COUNT(*) as cnt
  FROM review
  WHERE shoesno = #{shoesno}
    <if test="word != null and word != ''">
    AND UPPER(contents) LIKE '%' || UPPER(#{word}) || '%'
  </if>

  </select>

  <select id="list_search_paging" resultType="dev.mvc.review.ReviewVO" parameterType="Map">
    SELECT reviewno, contents, rating, rdate, shoesno, r
    FROM (
        SELECT reviewno, contents, rating, rdate, shoesno, rownum as r
        FROM (
            SELECT reviewno, contents, rating, rdate, shoesno
            FROM review
    <if test="word != null and word != ''">
              WHERE UPPER(contents) LIKE '%' || UPPER(#{word}) || '%'   
            </if>
    ORDER BY reviewno ASC
        ) WHERE shoesno = #{shoesno}
    )
    WHERE r &gt; = #{start_num} AND r &lt; = #{end_num}
  </select>


</mapper>